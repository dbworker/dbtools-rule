# UTF8 with BOM

# Rule Format
#   rule_id | rule_text | rule_code | optional_note1 | optional_note2
# explain each field
#   rule_id  : unique rule number, and pre-define several range
#              [0,    99] not use
#              [100, 199] basic rule
#              [200, 299] advance rule
#              [300, 399] strict rule
#   rule_hint: shown as vscode IDE diagnostic message, if omit, then will use rule_code instead
#   rule_code: a DSL, will be converted to javascript code, for example
#              >    HC_OS_DF_UMAX > 80
#              will be converted in oracle_rule_gencode.js like this
#              >    if ( hccdata['HC_OS_DF_UMAX'] > 80 ) {
#              >        recordIssue(,,,)
#              >    }
#              Attention! field split by '|', so js code '||' must replace by ' or '
#              treat HC_*  as string
#              treat @HC_* as json
#   optional_note1: optional advice text (some language)
#   optional_note2: optional advice text (other language)


################## 1 Basic rule #################

# 1.1 os
    100| | HC_OS_DF_UMAX > 80     | recommend concern space usage   | 建议关注空间使用情况
    101| | HC_OS_DF_IMAX > 800000 | recommend concern rubbish files | 建议检查垃圾文件数量
    102| | HC_OS_UPDAYS  > 270    | recommend schedule restart host | 建议有计划地重启主机

# 1.2 installation
    110| | parseFloat(HC_DB_VERSION) < 12.2    | recommend upgrading to newest versoin | 建议升级到19c以上版本
    111| | HC_DB_BLOCK_SIZE     > 8192         | recommend large block eff| 建议观察是否对IO性能有影响
    112| | HC_TABLESPACE_COUNT  > 100          | recommend reviewing tablespace creation policy | 建议查看表空间是否需要这么多
    113| | parseInt(HC_DB_USED_SPACE) > 10000000 | recommend shrinking data | 建议对数据库瘦身
    114| HC_DATAFILE_COUNT close to limit | HC_DATAFILE_COUNT > nvl(@HC_DB_SPEC_PARAMS['db_files'][0], '200') * 0.8   | recommend adjust db_files parameter | 建议调大db_files参数
    115| | HC_CONTROL_NUM       < 2            | recommend duplicating control file | 建议有两份控制文件
    116| | parseInt(HC_REDO_MINSIZE)  < 100    | recommend using redo more than 100M | 建议使用100M以上的redo
    117| | (HC_REDO_GROUPS / HC_INSTANCE_COUNT) < 4 | recommend more groups | 建议使用更多redo group
    118| | HC_PARAM_PROCESSES   < 1000         | recommend processes >= 1000| 建议processes参数大于1000
    119| | HC_MAX_CONNECTIONS   > HC_PARAM_PROCESSES * 0.7| recommend adjust processes parameter | 建议调整processes参数
    120| | HC_TABLESPACE_UMAX   > 90           | recommend adding tablespace timely | 建议及时添加表空间
    121| | parseInt(HC_RECYCLEBIN_USED) > 1000 | recommend cleaning recyclebin timely | 建议及时清理回收站
    122| | HC_INVALID_OBJECTS   > 10           | recommend checking invalid reason | 建议查看无效对象的原因
    123| | HC_SQL_VC_MAX        > 500          | recommend checking why versoin count become big | 建议查看vc版本多的原因
    124| | HC_DB_SCN            > 1000000000000| recommend checking why SCN become big | 建议SCN大的原因(如大量使用dblink） 
    125| | HC_PATCH_INFO       == ''          | recommend patching database | 建议给数据库打补丁

# 1.3 parameter
    # _gc_policy_time           recommend: 0           , DRM feature maybe cause RAC LMS/LMD process timeout
    # _gc_undo_affinity         recommend: FALSE       , DRM feature maybe cause RAC LMS/LMD process timeout
    130| DRM _gc_policy_time is enable   | (HC_IS_RAC == 'YES') && ( @HC_DB_SPEC_PARAMS['_gc_policy_time'][0]   != '0'  )    | recommend disable DRM
    131| DRM _gc_undo_affinity is enable | (HC_IS_RAC == 'YES') && ( @HC_DB_SPEC_PARAMS['_gc_undo_affinity'][0] != 'FALSE' ) | recommend disable DRM



# 1.4 backup
    #   backup db   at least  weekly
    #   backup arch at least  daily
    #   too small or too large is abnormal
    120| HC_LOG_MODE           != "ARCHIVELOG"      | recommend setting ARCHIVELOG mode and backup | 建议打开归档并对数据库备份
    121| HC_BACKUP_DB          == ''
    122| HC_BACKUP_ARCH        == ''
    @HC_BACKUP_FAILED  != ''
    123| HC_BACKUP_DB_WEEKLY_MIN < (HC_BACKUP_DB_WEEKLY_MAX/3)
    124| HC_BACKUP_ARCH_DAILY_MIN < (HC_BACKUP_ARCH_DAILY_MAX/4)
    #   TODO: recover test


# 1.5 log
    118| $HC_ALERT_ERRORS     != ''                | recommend diagnosing the errors cause | 建议分析报错的原因



# 1.6 security
    #   user privilege(super role)
    #   enable audit
    301| $HC_DBA_GRANTED != '' | recommend check user privilege | 建议检查用户权限是否过大
    302| (@HC_AUDIT_STRATEGY).substr(0,2) != 'DB' | recommend enable database audit | 建议启用数据库审计
    303| HC_DB_AUDTAB_SIZEM    > 1000               | recommend cleaning aud$ table timely | 建议及时清理aud$表中数据
    # profile


# 1.7 cluster
      |RAC only one node active|(HC_IS_RAC == 'YES') && (HC_INSTANCE_COUNT == 1) | recommend checking RAC nodes
    # gc block lost
    HC_RAC_BLOCKS_LOST > 100
    # gc stream
    HC_RAC_TRAFFIC_SIZEM > 20
    # asm diskgroup usage
    HC_ASM_DG_UMAX > 80
    # asm sga
    # HC_ASM_SGA_SIZEG > 2
    # asm disk
    # HC_ASM_DATA_DISK_COUNT > 4
    # HC_ASM_OCR_DISK_COUNT > 2
    # css trail error (HB lost)
    HC_CRS_OCSSD_LOG
    # 


################## 2 Advanced rule ##############

# 2.1 os
    # HC_CPU_RUN_QUEUE > HC_CPU_COUNT * 2
    # HC_CPU_RUN_QUEUE > 20
    # HC_CPU_BLOCK_QUEUE > 10

    # kernel net
    201| HC_OS_KERNEL netbuf < 4M | (@HC_OS_UNAME == 'AIX')   && (parseInt(@HC_OS_KERNEL['udp_recvspace'][1]) < 4000000) | recommend adjust to 4M for better performance
    202| HC_OS_KERNEL netbuf < 4M | (@HC_OS_UNAME == 'Linux') && (parseInt(@(HC_OS_KERNEL,'=')['net.core.rmem_max'][0]) < 4000000) | recommend adjust to 4M for better performance
    # io
    # ??
    # HC_OS_DISK_IO_USAGE > 90


# 2.4 install
    #pdb timezone
    #flashback
    #dbf, archive, 多副本, 文件数量
    # CONTROLFILE_SIZEM > 512M
    # redo grp > 2
    # undo
    # ??
    # media soft, patch

    #------ parameter in HC_DB_SPEC_PARAMS (partial)

    # _optimizer_extended_cursor_sharing_rel recommend: NONE  , bug will cause sql hang
    # _optimizer_extended_cursor_sharing     recommend: NONE  , bug will cause sql hang
    # _optimizer_adaptive_cursor_sharing     recommend: FALSE , bug will cause sql hang
    | _optimizer_extended_cursor_sharing_rel is enable| @HC_DB_SPEC_PARAMS['_optimizer_extended_cursor_sharing_rel'][0] != 'NONE' | recommend disable cursor sharing
    | _optimizer_extended_cursor_sharing is enable    | @HC_DB_SPEC_PARAMS['_optimizer_extended_cursor_sharing'][0] != 'NONE'   | recommend disable cursor sharing
    | _optimizer_adaptive_cursor_sharing is enable    | @HC_DB_SPEC_PARAMS['_optimizer_adaptive_cursor_sharing'][0] != 'FALSE' | recommend disable cursor sharing

    # _optimizer_mjc_enabled        (recommend: FALSE?)  , forbidden cartesian-join sql plan, let it be
    # _optimizer_null_aware_antijoin(recommend: FALSE?)  , (11g) has bug, tuning for Anti-Join sql, let it be
    # _optimizer_use_feedback       recommend: FALSE   , (11g) bug will cause CBO wrong and bad performance
    | _optimizer_use_feedback is enable    | @HC_DB_SPEC_PARAMS['_optimizer_use_feedback'][0] != 'FALSE' | recommend disable param

    # _undo_autotune                recommend: FALSE   , maybe give a large undo-retention (>1 day) and undotbs can't reuse space
    | _undo_autotune is enable    | @HC_DB_SPEC_PARAMS['_undo_autotune'][0] != 'FALSE' | recommend disable param

    # _use_adaptive_log_file_sync   recommend: FALSE   , maybe pool performance when LGWR auto switch on polling/post-wait mode 
    | _use_adaptive_log_file_sync is enable    | @HC_DB_SPEC_PARAMS['_use_adaptive_log_file_sync'][0] != 'FALSE' | recommend disable param

    # _use_single_log_writer        (recommend:?)
    # cell_offload_processing       (recommend:?)
    # db_files                      (for flashback ref)
    # db_recovery_file_dest         (for flashback ref)
    # db_recovery_file_dest_size    (for flashback ref)

    # deferred_segment_creation     recommend: FALSE   , export will skip empty table (then import will lost it)
    | deferred_segment_creation is enable    | @HC_DB_SPEC_PARAMS['deferred_segment_creation'][0] != 'FALSE' | recommend disable param

    # log_archive_config            (for dataguard ref)
    # log_archive_dest_2            (for dataguard ref)
    # memory_max_target             (for reference)

    # open_cursors                  recommend: <= 3000 , too large will hurt PGA and shared pool memory
    | open_cursors is large   | parseInt(@HC_DB_SPEC_PARAMS['open_cursors'][0]) > 3000   | recommend adjust param

    # optimizer_adaptive_features   recommend: FALSE   , 12.1.0.2 new feature but has bug that occupy large sql parse
    | optimizer_adaptive_features is enable    | @HC_DB_SPEC_PARAMS['optimizer_adaptive_features'][0] != 'FALSE' | recommend disable param

    # parallel_force_local          recommend: TRUE    , limit parallel-query not abuse RAC nodes
    # parallel_max_servers          recommend: <=32    , limit parallel-query not abuse cpu
    | parallel_force_local is disable    | @HC_DB_SPEC_PARAMS['parallel_force_local'][0] != 'TRUE' | recommend enable param
    | parallel_max_servers is large      | parseInt(nvl(@HC_DB_SPEC_PARAMS['open_cursors'][0], '160')) > 32   | recommend adjust param

    # recyclebin                    recommend: 'on'    , safe-guard for careless delete or drop
    | recyclebin is off    | toLowerCase(@HC_DB_SPEC_PARAMS['recyclebin'][0]) != 'on' | recommend enable recyclebin

    # remote_login_passwordfile     (for reference)
    # result_cache_max_size         (recommend: 0?)    , maybe not useful, let it be
    # sec_case_sensitive_logon      (recommend:  ?)    , let it be

    # spfile                        recommend: not null, spfile better than pfile
    | | @HC_DB_PARAMETERS['spfile'][0] == '' | recommend adjust param

    # sga_max_size                  (for reference)
    # sga_target                    (for reference)
    # undo_retention                recommend: >= 3600
    | | @HC_DB_SPEC_PARAMS['undo_retention'][0] < 3600 | recommend adjust param

    # other parameter
    #   _b_tree_bitmap_plans      set false to disable complex index operate, index should tuning firstly
    #   _PX_use_large_pool        set true to use large pool
    #   _partition_large_extents  set false to forbid initial large extent
    #   _memory_imm_mode_without_autosga  (11.2.0.3) set false to forbid imm when some pool already insufficient
    #   enable_ddl_logging        set true sometime is useful for troubleshooting
    #   event='28401 TRACE NAME CONTEXT FOREVER, LEVEL 1', to disable 'delay password check' feature
    #   event='10949 trace name context forever,level 1',  to disable 'use direct-path-read' feature (I like direct-path-read)
    #   OPTIMIZER_DYNAMIC_SAMPLING set false? let it be
    

    #  进程数量
    # osw, tfa, ahf

# 2.2 awr
    # massive modify
    HC_PROF_BLOCK_CHANGES > HC_PROF_READ_BLOCKS * 0.33
    HC_PROF_READ_DISK_BLOCKS > HC_PROF_READ_BLOCKS * 0.1
    HC_PROF_LOGON_PER_SECOND > 10
    HC_PROF_REDO_SIZEM > 20

    # event 'enq' in top 2 (javascript code)
    (getkv(HC_AWR_TOP_EVENTS))[0].startsWith('enq') || (getkv(HC_AWR_TOP_EVENTS))[1].startsWith('enq')

    # event io latency > 10 ms
    (getkv(HC_AWR_TOP_EVENTS))['log file sync'][3] > 10
    (getkv(HC_AWR_TOP_EVENTS))['db file sequential read'][3] > 10

    # RAC 'gc%' related net latency > 3 ms
    (getkv(HC_AWR_TOP_EVENTS))['gc cr grant 2-way'][3] > 3
    (getkv(HC_AWR_TOP_EVENTS))['gc cr disk read'][3] > 3

    # background top events
    (getkv(HC_AWR_BKGD_EVENTS))['log file parallel write'][4] > 3
    (getkv(HC_AWR_BKGD_EVENTS))['db file parallel write'][4] > 3

    # top-1 sql gets > 20%
    (getkv(HC_AWR_SQL_TOP_GETS))[0][0] >  HC_AWR_DB_READ_BLOCKS * 0.2

    # top-1 sql executions > 20%
    (getkv(HC_AWR_SQL_TOP_EXECS))[0][0] >  HC_AWR_DB_READ_BLOCKS * 0.2

    # top-2 sql (order by executions) found  ( ... from dual)
    (getkv(HC_AWR_SQL_TOP_EXECS))[0][8].endsWith(' from dual') || (getkv(HC_AWR_TOP_EVENTS))[1][8].endsWith(' from dual')


# 2.3 object

    #------ table/part -----
    211, HC_TABLE_USE_LONG > 100
    #212, HC_TABLE_SIZEG_MAX > 80
    #213, HC_PTABLE_PARSIZEG_MAX   > 80
    214| HC_PTABLE_PARTS_MAX  > 1024
    #215| HC_TABLE_IN_SYSTBS_COUNT > 10
    #216| HC_TABLE_LOWUSAGE_COUNT > 20
    217| $HC_TABLE_NAME_LOWERCASE != ''

    #------ index ----------
    206| HC_INDEX_COLS_MAX > 6
    207| HC_TABLE_IDXS_MAX > 6
    #208| $HC_TABLE_100M_NO_INDEX != ''
    #209| HC_INDEX_BLEVEL_MAX > 4
    #210| HC_INDEX_LOWUSAGE_COUNT > 20
    #  TODO: large normal index

    #------ misc type ------
    202| HC_DB_NOCACHE_SEQ_COUNT > 10
    #204| HC_DEPRCT_DBA_JOBS_COUNT > 5
    #205| @HC_PK_USE_NORMAL_INDEX != ''


    #------ statistic ------
    # stale statistic
    # ??
    # no statistic
    #HC_TAB_NO_STA_COUNT > 10

    # fetch continued row
    # ??


# 2.5 log
    #------ listener -------
    HC_LSNR_LOG_SIZEM > 1000
    HC_LSNR_TRAIL_COUNT > 200
    # TODO: listener service block

    # abnormal proc log
    # ??

# 2.6 concurrency (daytime)

    #------ txn ------------
    # large txn
    #306, HC_SQL_INSERT_ROWNUM > 10000
    #306, HC_SQL_UPDATE_ROWNUM > 10000
    #307, HC_SQL_DELETE_ROWNUM > 10000
    # long running txn (8:00 ~ 18:00)
    HC_TXN_DURATION_MAX > 600
    HC_TXN_UNDO_SIZEM_MAX > 128
    # too many rollback
    int(AWR_INST_STATS.children('transaction rollbacks').next().val) > int(AWR_INST_STATS.children('transaction rollbacks').next().val) / 20
    HC_TXN_2PC_PENDING != ''
    #------ lock ----------
    # internal-lock (latch, library cache lock, mutex)
    # ??
    AWR_TOP_EVENTS.children('latch').next().val)
    AWR_TOP_EVENTS.children('library cache').next().val)
    AWR_TOP_EVENTS.children('cursor').next().val)
    # txn 'enq'
    # lock duration
    # lock block others
    # (checked in AWR)
    # ddl lock
    # ??
    # deadlock
    # ??


# 2.7 sql
    #   suspicious sql (DDL, large DML, missing 'WHERE')
    #   suspicious client (too many connected from PC)
    #304, $HC_SQL_LONG_RUN_DDL != ''
    #305, HC_SQL_SELECT_ROWNUM > 100000
    #308, $HC_SQL_MISSING_WHERE != ''
    # sql long running
    #HC_SQL_DURATION_MAX > 7200

    # large sort
    #HC_SQL_SORT_SIZEM_MAX > 128
    # implicitly convert between char and number
    # ??
    # 使用11g新特性来找未bind

    # index full scan
    # ??
    # index split
    # ??
    # table full scan
    #@HC_SQL_HAS_WILDCARD_PREFIX == 'TRUE'

# 2.8 process/session
    #309, HC_DB_CONN_FROM_GUI > 10
    #HC_SESS_ACTIVE_MAX > HC_CPU_COUNT * 3
    #HC_SESS_ACTIVE_MAX > 100


    #   TODO: sqlnet.ora allow IPs
    #   TODO: more ddl such as alter, column
    #   TODO: critical table's access
    #   TODO: check aud$ and find something
    #   TODO: job schedule

################## 3 Strict rule ################
# 3.1 os
    # use huge page when memory size > 128G (incompatible with MMA memory_target)
    # ??
    # free
    #HC_OS_FREE_MEM_SIZEM < 2000
    # ulimit
    # ??
    # NTP
    @HC_OS_NTP == ''

# 3.2 application
    # dblink is bad
    201, HC_DBLINK_COUNT > 3
    # trigger is bad
    203, (HC_TRIGGER_COUNT > 100) || (HC_TRIGGER_COUNT > HC_TABLE_COUNT/30)
    # large id means create&drop object too frequently
    HC_OBJECT_ID_MAX > 2000000
    #HC_FOREIGN_KEY_INUSE
    #select from update nowait
    # don't use where rowid
    # subquery
    # select *
    # like '%abc'
    # select count(1) , not count(*)
    # different charset
    # view embed view

# 3.3 security
    # should exist standby db, and apply timly
    #119, @HC_STDBY_INUSE    == 'NO'              , recommend building standby database , 建议配置容灾库
    #HC_STDBY_LAG_IN_SEC > 3
    # dup redo member
    HC_REDO_MEMBER_COUNT < 2
    # datafile & redo(archive) saved in different physical disk
    #@HC_SEPARATE_DBF_REDO_DISK == 'NO'
    #HC_PASSWD_VERIFY_FUNC

# 3.4 parameter
    #----- disable feature --- 
    #_use_adaptive_log_file_sync
    $(HC_DB_ALL_PARAMETERS).children('_use_adaptive_log_file_sync').val[0] == 'TRUE'
    #_undo_autotune
    $(HC_DB_ALL_PARAMETERS).children('_undo_autotune').val[0] == 'TRUE'
    # log_buffer > 256M when FRA
    # RMAN snpashot



# 3.5 other
    # haip
    # ??
    # awr retension > 35 day
    # copy database, oracle file mode
